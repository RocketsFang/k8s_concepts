apiVersion: v1
kind: Namespace
metadata:
  name: pod-array
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-array
  namespace: pod-array
  labels:
    app: nodejsapp
spec:
  hostAliases:
  - hostnames: [ k8s, concepts, learning ]
    ip: 66.66.66.66
  nodeName: minikube
  hostname: k8s-concepts-learning
  nodeSelector:
    purpose: k8s_concepts_learning
#  Always, OnFailure, Never. Default to Always
# co-worked with 'container.lifecycle.postStart action'
  restartPolicy: Always
  shareProcessNamespace: false
  terminationGracePeriodSeconds: 20
  containers:
  - image: rocketsfang/k8s_concepts:nodejs_latest
    name: pod-nodejs
    securityContext:
      privileged: false
#      capabilities:  date 060606002016.00   chown nobody text
#        add: ["CHOWN", "SYS_TIME"]
#        drop: ["ALL"]
    imagePullPolicy: Always
# co-worked with restartPolicy
#    lifecycle:
#      postStart:
#        exec:
#          command: "/opt/datastore/container/no-existed.sh"
    ports:
    - containerPort: 8888
#      hostPort: 8888
    volumeMounts:
    - name: pod-volume
      mountPath: /opt/datastore/data
  - image: rocketsfang/k8s_concepts:db_latest
    name: pod-db
    imagePullPolicy: Always
    volumeMounts:
    - name: pod-volume
      mountPath: /opt/datastore/data
  volumes:
  - name: pod-volume
    emptyDir:
      medium: Memory
      sizeLimit: 2Mi
# or use the host machine
#  - name: pod-volume
#    type: DirectoryOrCreate
#    path: /home/docker/hostpath/